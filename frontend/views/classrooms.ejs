<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Classroom Panel</title>
    <style>
        /* Base CSS for styling */
        body {
            font-family: Arial, sans-serif;
            margin: 0;
            padding: 0;
            background-color: #f9f9f9;
            color: #333;
            transition: background-color 0.3s ease;
        }
        .container {
            max-width: 800px;
            margin: 50px auto;
            padding: 20px;
            background-color: #f5f5f5; /* Light gray */
            border-radius: 8px;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
            transition: background-color 0.3s ease, color 0.3s ease;
        }
        input[type="text"], input[type="password"], select {
            width: 100%;
            padding: 10px;
            margin: 5px 0;
            border: 1px solid #ddd;
            border-radius: 4px;
            box-sizing: border-box;
        }
        input[type="submit"] {
            width: 100%;
            background-color: #2ecc71; /* Forest green */
            color: white;
            padding: 14px 20px;
            margin: 8px 0;
            border: none;
            border-radius: 4px;
            cursor: pointer;
            transition: background-color 0.3s ease;
        }
        input[type="submit"]:hover {
            background-color: #27ae60; /* Darker forest green */
        }
        label {
            color: #333;
            margin-bottom: 5px;
            display: block;
        }
        .banner {
            background-color: #2ecc71; /* Forest green */
            color: #fff;
            padding: 10px;
            text-align: center;
            border-radius: 8px 8px 0 0;
            transition: background-color 0.3s ease; /* Added background color transition */
            position: relative; /* Added position relative for absolute positioning */
        }
        .logo {
            position: absolute; /* Position the logo absolutely */
            top: 50%; /* Adjust top position */
            transform: translateY(-50%); /* Center vertically */
            left: 10px; /* Adjust left position */
            width: 40px; /* Adjust width as needed */
            height: auto;
        }
        /* Dark Mode Button */
        .dark-mode-btn {
            position: absolute;
            top: 50%; /* Adjust top position */
            right: 10px;
            background-color: transparent;
            color: #7f7f7f;
            border: 1px solid #7f7f7f;
            padding: 5px 10px;
            border-radius: 4px;
            cursor: pointer;
            transition: background-color 0.3s ease; /* Added color transition */
        }
        .dark-mode-btn:hover {
            background-color: #333;
            color: #fff; /* White text on hover */
        }
        /* Dark Mode */
        body.dark-mode {
            background-color: #333; /* Dark gray */
        }
        /* Deadline Box */
        .deadline-box {
            background-color: #aed832; /* Yellow */
            color: #333;
            padding: 10px;
            margin-bottom: 20px;
            border-radius: 8px;
        }
        /* Dark Mode Button */
        .dark-mode-btn {
            position: absolute;
            top: 50%; /* Adjust top position */
            right: 10px;
            background-color: transparent;
            color: #7f7f7f;
            border: 1px solid #7f7f7f;
            padding: 5px 10px;
            border-radius: 4px;
            cursor: pointer;
            transition: background-color 0.3s ease; /* Added color transition */
        }
        .dark-mode-btn:hover {
            background-color: #333;
            color: #fff;
        }
        /* Dark Mode */
        body.dark-mode {
            background-color: #333; /* Dark gray */
            color: #ddd;
        }
        .container.dark-mode {
            background-color: #444; /* Dark gray */
            border-color: #666; /* Dark gray */
        }
        .banner.dark-mode {
            background-color: #004d00; /* Dark green */
            border-bottom: 2px solid #666; /* Dark gray */
        }
        .deadline-box.dark-mode {
            background-color: #b28900; /* Dark yellow */
            color: #333;
        }
        /* Classroom entry styling */
        .classroom-entry {
            margin-bottom: 20px;
        }
        .classroom-details {
            display: none;
            margin-top: 10px;
        }
        .classroom-details.show {
            display: block;
        }
    </style>
</head>
<body>
    <!-- Dark Mode Toggle -->
    

    <!-- Banner -->
    <div class="banner">
        <img class="logo" src="frontend/views/logo.png" alt="Logo">
        <h1>Classroom Panel</h1>
        <button class="dark-mode-btn" onclick="toggleDarkMode()">Toggle Dark Mode</button>
    </div>

    <!-- Deadline Box -->
    <div class="container deadline-box" id="deadline-box">
        <h2>Upcoming Deadline</h2>
        <p id="upcoming-deadline">No upcoming deadlines</p>
    </div>

    <!-- Content Container -->
    <div class="container">
        <h2>Classrooms</h2>
        <!-- Classroom Entries -->
        <% classrooms.forEach((classroom, index) => { %>
        <div class="classroom-entry">
            <h3>Classroom: <%= classroom.teacherName %> - <%= classroom.classCode %></h3>
            <button onclick="toggleClassroomDetails(<%= index %>)">Toggle Details</button>
            <div id="classroom-details-<%= index %>" class="classroom-details">
                <!-- Add notes and deadlines panel here -->
                <h4>Notes</h4>
                <textarea id="notes-<%= index %>" rows="4" cols="50"></textarea>
                <br>
                <label for="assignment">Assignment:</label>
                <input type="text" id="assignment-<%= index %>" name="assignment">
                <label for="due-date">Due Date:</label>
                <input type="date" id="due-date-<%= index %>" name="due-date">
                <button onclick="addAssignment('<%= index %>')">Add Assignment</button>
                <ul id="assignments-list-<%= index %>">
                    <!-- List of assignments will be displayed here -->
                </ul>
            </div>
        </div>
        <% }); %>
    </div>

    <script>
        var upcomingAssignment = {
            assignment: null,
            dueDate: null,
            daysDifference: null
        };

        function toggleClassroomDetails(index) {
            var details = document.getElementById('classroom-details-' + index);
            details.classList.toggle('show');
        }
        
        function addAssignment(index) {
            var assignmentInput = document.getElementById('assignment-' + index);
            var dueDateInput = document.getElementById('due-date-' + index);
            var assignment = assignmentInput.value;
            var dueDate = new Date(dueDateInput.value); // Convert due date to a Date object

            if (assignment && dueDateInput.value) {
                var assignmentsList = document.getElementById('assignments-list-' + index);
                var listItem = document.createElement('li');
                listItem.textContent = 'Assignment: ' + assignment + ' - Due Date: ' + dueDate.toDateString();
                // Calculate difference in days between current date and due date
                var timeDifference = dueDate.getTime() - Date.now();
                var daysDifference = Math.ceil(timeDifference / (1000 * 3600 * 24));
                // Apply color indicator based on days difference
                if (daysDifference > 7) {
                    listItem.style.color = 'green'; // Over a week away
                } else if (daysDifference < 1) {
                    listItem.style.color = 'red'; // Less than a day away
                } else {
                    listItem.style.color = 'yellow'; // Anything else
                }
                assignmentsList.appendChild(listItem);

                // Update upcoming deadline if this assignment is sooner
                if (!upcomingAssignment.dueDate || dueDate < upcomingAssignment.dueDate) {
                    upcomingAssignment.assignment = assignment;
                    upcomingAssignment.dueDate = dueDate;
                    upcomingAssignment.daysDifference = daysDifference;
                    updateUpcomingDeadline();
                }

                // Clear input fields after adding assignment
                assignmentInput.value = '';
                dueDateInput.value = '';
            } else {
                alert('Please fill in both Assignment and Due Date fields.');
            }
        }

        function updateUpcomingDeadline() {
            var upcomingDeadline = document.getElementById('upcoming-deadline');
            var deadlineMessage = 'Upcoming Deadline: ';
            deadlineMessage += 'Assignment: ' + upcomingAssignment.assignment + ', Due in ';
            if (upcomingAssignment.daysDifference > 0) {
                deadlineMessage += upcomingAssignment.daysDifference + ' days';
            } else {
                deadlineMessage += 'less than a day';
            }
            upcomingDeadline.textContent = deadlineMessage;
        }

        function toggleDarkMode() {
            var darkModeToggle = document.body.classList.toggle('dark-mode');
            var containers = document.querySelectorAll('.container');
            var banners = document.querySelectorAll('.banner');
            var deadlineBox = document.getElementById('deadline-box');
            containers.forEach(container => {
                container.classList.toggle('dark-mode');
            });
            banners.forEach(banner => {
                banner.classList.toggle('dark-mode');
            });
            deadlineBox.classList.toggle('dark-mode');
        }
    </script>
</body>
</html>
