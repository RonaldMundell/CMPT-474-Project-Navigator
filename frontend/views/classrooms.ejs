<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Classroom Panel</title>
    <style>
        /* Base CSS for styling */
        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            margin: 0;
            padding: 0;
            background-color: #f9f9f9;
            color: #333;
            transition: background-color 0.3s ease;
        }
    
        .container {
            max-width: 800px;
            margin: 50px auto;
            padding: 20px;
            background-color: #f5f5f5;
            border-radius: 12px;
            box-shadow: 0 0 15px rgba(0, 0, 0, 0.2);
            transition: background-color 0.3s ease, color 0.3s ease;
        }
    
        .classroom-entry {
            margin-bottom: 20px;
        }
    
        .classroom-details {
            display: none;
            margin-top: 10px;
        }
    
        .classroom-details.show {
            display: block;
        }
    
        h2, h3, h4 {
            font-weight: bold;
            font-size: 24px;
            margin-bottom: 10px;
        }
    
        textarea, input[type="text"], input[type="date"], input[type="submit"], button {
            width: 100%;
            padding: 12px;
            margin: 5px 0;
            border: none;
            border-radius: 10px;
            box-sizing: border-box;
            font-size: 18px;
            color: #333; /* Ensure text color */
        }
    
        textarea {
            resize: vertical;
        }
    
        input[type="submit"], button {
            cursor: pointer;
            background-color: #2ecc71;
            color: #fff;
            transition: background-color 0.3s ease;
        }
    
        input[type="submit"]:hover, button:hover {
            background-color: #27ae60;
        }
    
        input[type="date"]::-webkit-inner-spin-button,
        input[type="date"]::-webkit-calendar-picker-indicator {
            display: none;
            -webkit-appearance: none;
        }
    
        .toggle-details-btn[disabled] {
            background-color: #ccc; /* Gray out the button */
            cursor: not-allowed;
        }
    
        .deadline-box {
            background-color: #fff; /* Ensure white background */
            border-radius: 10px;
            padding: 20px;
            margin-bottom: 20px;
        }
    
        .upcoming-deadline {
            font-size: 20px;
            font-weight: bold;
            margin-bottom: 10px;
        }
    </style>
    
</head>
<body>
    <!-- Include the navbar -->
    <%- include('partials/navbar') %>

    <!-- Deadline Box -->
    <div class="container deadline-box" id="deadline-box">
        <h2>Upcoming Deadline</h2>
        <% assignments.forEach((assignment) => { %>
          <% assignment.forEach(a => { %>
            <li><%= a.assignment %> Due Date: <%= a.dueDate %> Classroom: <%= a.classCode %></li>
          <% }); %>
        <% }); %>
        <p id="upcoming-deadline">No upcoming deadlines</p>
    </div>

    <!-- Content Container -->
    <div class="container">
        <h2>Classrooms</h2>
        <!-- Classroom Entries -->
        <div class="classroom-entry">
        <% classrooms.forEach((classroom, index) => { %>
        <div id="classroom-code" hidden><%= classroom.classCode %></div>
            <h3>Classroom: <%= classroom.teacherName %> - <%= classroom.classCode %></h3>
            <button onclick="toggleClassroomDetails(<%= index %>)">Toggle Details</button>
            <div id="classroom-details-<%= index %>" class="classroom-details">
                <!-- Add notes and deadlines panel here -->
                <h4>Notes</h4>
                <textarea id="notes-<%= index %>" rows="4" cols="50"></textarea>
                <br>
                <label for="assignment">Assignment:</label>
                <input type="text" id="assignment-<%= index %>" name="assignment">
                <label for="due-date">Due Date:</label>
                <input type="date" id="due-date-<%= index %>" name="due-date">
                <button onclick="addAssignment('<%= index %>')">Add Assignment</button>
                <ul id="assignments-list-<%= index %>">
                </ul>
            </div>
        </div>
        <% }); %>
    </div>

    <script>
        // Variable to store upcoming assignment details
        var upcomingAssignment = {
            assignment: null,
            dueDate: null,
            daysDifference: null
        };
    
        // Function to toggle classroom details
        function toggleClassroomDetails(index) {
            var details = document.getElementById('classroom-details-' + index);
            details.classList.toggle('show');
    
            // Gray out the toggle details button when toggled
            var toggleButton = document.getElementById('toggle-btn-' + index);
            toggleButton.disabled = !toggleButton.disabled;
        }

        function renderAssignment(data) {
                var assignmentsList = document.getElementById('assignments-list-' + index);
                var listItem = document.createElement('li');
                listItem.textContent = 'Assignment: ' + assignment + ' - Due Date: ' + dueDate.toDateString();
                // Calculate difference in days between current date and due date
                var timeDifference = dueDate.getTime() - Date.now();
                var daysDifference = Math.ceil(timeDifference / (1000 * 3600 * 24));
                // Apply color indicator based on days difference
                if (daysDifference > 7) {
                    listItem.style.color = 'green'; // Over a week away
                } else if (daysDifference < 1) {
                    listItem.style.color = 'red'; // Less than a day away
                } else {
                    listItem.style.color = 'gray'; // Anything else
                }
                assignmentsList.appendChild(listItem);
        }
    
        // Function to add assignment
        function addAssignment(index) {
            var assignmentInput = document.getElementById('assignment-' + index);
            var dueDateInput = document.getElementById('due-date-' + index);
            var assignment = assignmentInput.value;
            var dueDate = new Date(dueDateInput.value); // Convert due date to a Date object
            var classCode = document.getElementById('classroom-code').innerHTML;
    
            if (assignment && dueDateInput.value) {
              let fetchData = {
                method: 'POST',
                body: JSON.stringify({
                  classCode: classCode,
                  assignment: assignment,
                  dueDate: dueDate,
                  index: index
                }),
                headers: new Headers({
                  'Content-Type': 'application/json'
                })
              }
              fetch('/classrooms', fetchData)
                .then(response => {console.log(response)})
                .catch(error => {console.log(error)});
                var assignmentsList = document.getElementById('assignments-list-' + index);
                var listItem = document.createElement('li');
                listItem.textContent = 'Assignment: ' + assignment + ' - Due Date: ' + dueDate.toDateString();
                // Calculate difference in days between current date and due date
                var timeDifference = dueDate.getTime() - Date.now();
                var daysDifference = Math.ceil(timeDifference / (1000 * 3600 * 24));
                // Apply color indicator based on days difference
                if (daysDifference > 7) {
                    listItem.style.color = 'green'; // Over a week away
                } else if (daysDifference < 1) {
                    listItem.style.color = 'red'; // Less than a day away
                } else {
                    listItem.style.color = 'gray'; // Anything else
                }
                assignmentsList.appendChild(listItem);
    
                // Update upcoming deadline if this assignment is sooner
                if (!upcomingAssignment.dueDate || dueDate < upcomingAssignment.dueDate) {
                    upcomingAssignment.assignment = assignment;
                    upcomingAssignment.dueDate = dueDate;
                    upcomingAssignment.daysDifference = daysDifference;
                    updateUpcomingDeadline();
                }
    
                // Clear input fields after adding assignment
                assignmentInput.value = '';
                dueDateInput.value = '';
            } else {
                alert('Please fill in both Assignment and Due Date fields.');
            }
        }
    
        // Function to update upcoming deadline panel
        function updateUpcomingDeadline() {
            var upcomingDeadline = document.getElementById('upcoming-deadline');
            var deadlineMessage = 'Upcoming Deadline: ';
            deadlineMessage += 'Assignment: ' + upcomingAssignment.assignment + ', Due in ';
            if (upcomingAssignment.daysDifference > 0) {
                deadlineMessage += upcomingAssignment.daysDifference + ' days';
            } else {
                deadlineMessage += 'less than a day';
            }
            upcomingDeadline.textContent = deadlineMessage;
        }

        function updateUpcomingDeadline() {
            var upcomingDeadline = document.getElementById('upcoming-deadline');
            var deadlineMessage = 'Upcoming Deadline: ';
            deadlineMessage += 'Assignment: ' + upcomingAssignment.assignment + ', Due in ';

            // Determine color based on days until the deadline
            var color = '';
            if (upcomingAssignment.daysDifference <= 1) {
                color = 'red'; // Due in a day or less
            } else if (upcomingAssignment.daysDifference <= 7) {
                color = 'gray'; // Due in less than a week
            } else {
                color = 'green'; // Due in more than a week
            }

            // Apply color to the upcoming deadline panel
            upcomingDeadline.style.color = color;
            upcomingDeadline.textContent = deadlineMessage + upcomingAssignment.daysDifference + ' days';
        }
    </script>
    
</body>
</html>
